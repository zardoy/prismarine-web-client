{"version":3,"file":"LoadingChunks.stories-c9ffbc91.js","sources":["../../src/react/LoadingChunks.tsx"],"sourcesContent":["import { useEffect, useRef } from 'react'\nimport './LoadingChunks.css'\n\nexport default ({ regionFiles = [] as string[], stateMap = {} as Record<string, string>, displayText = false, playerChunk = null as null | { x: number, z: number } }) => {\n  // visualize downloading chunks\n  const regionNumbers = regionFiles.map(x => x.split('.').slice(1, 3).map(Number))\n  const minX = Math.min(...regionNumbers.map(([x]) => x))\n  const maxX = Math.max(...regionNumbers.map(([x]) => x))\n  const minZ = Math.min(...regionNumbers.map(([, z]) => z))\n  const maxZ = Math.max(...regionNumbers.map(([, z]) => z))\n  const xChunks = maxX - minX + 1\n  const zChunks = maxZ - minZ + 1\n\n  return <div style={{\n    // maxWidth: '80%',\n    // maxHeight: '80%',\n    // aspectRatio: '1',\n    display: 'grid',\n    gridTemplateColumns: `repeat(${xChunks}, 1fr)`,\n    gridTemplateRows: `repeat(${zChunks}, 1fr)`,\n    gap: 1,\n    width: '110px',\n    height: '110px',\n  }}>\n    {Array.from({ length: xChunks * zChunks }).map((_, i) => {\n      const x = minX + i % xChunks\n      const z = minZ + Math.floor(i / xChunks)\n      const file = `r.${x}.${z}.mca`\n      const state = stateMap[file]\n      if (!regionFiles.includes(file)) return <div key={i} style={{ background: 'gray' }} />\n      return <Chunk key={i} x={x} z={z} state={state} displayText={displayText} currentPlayer={playerChunk?.x === x && playerChunk?.z === z} />\n    })}\n  </div>\n}\n\nconst Chunk = ({ x, z, state, displayText, currentPlayer }) => {\n  const text = displayText ? `${x},${z}` : undefined\n\n  return <div style={{\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n    background: state === 'errored' ? 'red' : state === 'loading' ? 'white' : 'limegreen',\n    animation: state === 'loading' ? `loading-chunks-loading-animation 4s infinite cubic-bezier(0.4, 0, 0.2, 1)` : undefined,\n    transition: 'background 1s',\n    color: state === 'loading' ? 'black' : 'white',\n    position: 'relative',\n    zIndex: 1,\n  }}>\n    {/* green dot */}\n    {currentPlayer && <div style={{\n      position: 'absolute',\n      background: 'red',\n      borderRadius: '50%',\n      width: '5px',\n      height: '5px',\n      zIndex: -1,\n    }} />}\n    {text}</div>\n}\n"],"names":["LoadingChunks$1","regionFiles","stateMap","displayText","playerChunk","regionNumbers","x","minX","maxX","minZ","z","maxZ","xChunks","zChunks","jsx","_","i","file","state","Chunk","currentPlayer","text","jsxs"],"mappings":"6FAGA,MAAAA,EAAA,CAAA,CAAA,YAAAC,EAAA,CAAA,EAAA,SAAAC,EAAA,CAAA,EAAA,YAAAC,EAAA,GAAA,YAAAC,EAAA,QAAA,CAEE,MAAAC,EAAAJ,EAAA,IAAAK,GAAAA,EAAA,MAAA,GAAA,EAAA,MAAA,EAAA,CAAA,EAAA,IAAA,MAAA,CAAA,EACAC,EAAA,KAAA,IAAA,GAAAF,EAAA,IAAA,CAAA,CAAAC,CAAA,IAAAA,CAAA,CAAA,EACAE,EAAA,KAAA,IAAA,GAAAH,EAAA,IAAA,CAAA,CAAAC,CAAA,IAAAA,CAAA,CAAA,EACAG,EAAA,KAAA,IAAA,GAAAJ,EAAA,IAAA,CAAA,EAAAK,CAAA,IAAAA,CAAA,CAAA,EACAC,EAAA,KAAA,IAAA,GAAAN,EAAA,IAAA,CAAA,EAAAK,CAAA,IAAAA,CAAA,CAAA,EACAE,EAAAJ,EAAAD,EAAA,EACAM,EAAAF,EAAAF,EAAA,EAEA,OAAAK,EAAA,MAAA,CAAA,MAAA,CAAmB,QAAA,OAIR,oBAAA,UAAAF,CAAA,SAC6B,iBAAA,UAAAC,CAAA,SACH,IAAA,EAC9B,MAAA,QACE,OAAA,OACC,EAAA,SAAA,MAAA,KAAA,CAAA,OAAAD,EAAAC,CAAA,CAAA,EAAA,IAAA,CAAAE,EAAAC,IAAA,CAGN,MAAAV,EAAAC,EAAAS,EAAAJ,EACAF,EAAAD,EAAA,KAAA,MAAAO,EAAAJ,CAAA,EACAK,EAAA,KAAAX,CAAA,IAAAI,CAAA,OACAQ,EAAAhB,EAAAe,CAAA,EACA,OAAAhB,EAAA,SAAAgB,CAAA,EACAH,EAAAK,EAAA,CAAA,EAAAb,EAAA,EAAAI,EAAA,MAAAQ,EAAA,YAAAf,EAAA,eAAAC,GAAA,YAAAA,EAAA,KAAAE,IAAAF,GAAA,YAAAA,EAAA,KAAAM,CAAA,EAAAM,CAAA,EADiCF,EAAA,MAAA,CAAA,MAAA,CAAA,WAAA,MAAA,GAAAE,CAAA,CACsG,CAAA,CAAA,CAAA,CAG7I,EAEAG,EAAA,CAAA,CAAA,EAAAb,EAAA,EAAAI,EAAA,MAAAQ,EAAA,YAAAf,EAAA,cAAAiB,KAAA,CACE,MAAAC,EAAAlB,EAAA,GAAAG,CAAA,IAAAI,CAAA,GAAA,OAEA,OAAAY,EAAA,MAAA,CAAA,MAAA,CAAmB,QAAA,OACR,eAAA,SACO,WAAA,SACJ,WAAAJ,IAAA,UAAA,MAAAA,IAAA,UAAA,QAAA,YAC8D,UAAAA,IAAA,UAAA,4EAAA,OACqC,WAAA,gBACnG,MAAAA,IAAA,UAAA,QAAA,QAC2B,SAAA,WAC7B,OAAA,CACF,EAAA,SAAA,CAGPE,GAAAN,EAAA,MAAA,CAAA,MAAA,CAA6B,SAAA,WAClB,WAAA,MACE,aAAA,MACE,MAAA,MACP,OAAA,MACC,OAAA,EACA,EAAA,EACPO,CACF,CAAA,CAAA,CACL;;;;;;;;;"}