{"version":3,"file":"FoodBar.stories-111e0257.js","sources":["../../src/react/FoodBar.tsx"],"sourcesContent":["import { useRef, useState, useEffect } from 'react'\nimport SharedHudVars from './SharedHudVars'\nimport './FoodBar.css'\nimport { barEffectAdded, barEffectEnded } from './BarsCommon'\n\n\nexport type FoodBarProps = {\n  gameMode?: string,\n  food: number,\n  effectToAdd?: number | null,\n  effectToRemove?: number | null,\n  resetEffects?: () => void,\n  style?: React.CSSProperties\n}\n\nexport default ({\n  gameMode,\n  food,\n  effectToAdd,\n  effectToRemove,\n  resetEffects,\n  style\n}: FoodBarProps) => {\n  const foodRef = useRef<HTMLDivElement | null>(null)\n\n  useEffect(() => {\n    if (foodRef.current) {\n      foodRef.current.classList.toggle('creative', gameMode === 'creative' || gameMode === 'spectator')\n    }\n  }, [gameMode])\n\n  useEffect(() => {\n    const foodbar = foodRef.current\n    if (foodbar) {\n      foodbar.classList.toggle('low', food <= 5)\n\n      const foods = foodbar.children\n\n      for (const food of foods) {\n        food.classList.remove('full')\n        food.classList.remove('half')\n      }\n\n      for (let i = 0; i < Math.ceil(food / 2); i++) {\n        if (i >= foods.length) break\n\n        if (food % 2 !== 0 && Math.ceil(food / 2) === i + 1) {\n          foods[i].classList.add('half')\n        } else {\n          foods[i].classList.add('full')\n        }\n      }\n    }\n  }, [food])\n\n  useEffect(() => {\n    if (effectToAdd) {\n      barEffectAdded(foodRef.current, effectToAdd)\n    }\n    if (effectToRemove) {\n      barEffectEnded(foodRef.current, effectToRemove)\n    }\n    resetEffects?.()\n  }, [effectToAdd, effectToRemove])\n\n  return <SharedHudVars>\n    <div ref={foodRef} className='foodbar' style={style}>\n      {\n        Array.from({ length: 10 }, () => 0)\n          .map((num, index) => <div\n            key={`food-${index}`}\n            className='food'\n          />)\n      }\n    </div>\n  </SharedHudVars>\n}\n"],"names":["FoodBar$1","gameMode","food","effectToAdd","effectToRemove","resetEffects","style","foodRef","useRef","useEffect","foodbar","foods","food2","i","barEffectAdded","barEffectEnded","jsx","SharedHudVars","num","index"],"mappings":"0LAeA,MAAAA,EAAA,CAAA,CAAgB,SAAAC,EACd,KAAAC,EACA,YAAAC,EACA,eAAAC,EACA,aAAAC,EACA,MAAAC,CAEF,IAAA,CACE,MAAAC,EAAAC,SAAA,IAAA,EAEAC,OAAAA,EAAAA,UAAA,IAAA,CACEF,EAAA,SACEA,EAAA,QAAA,UAAA,OAAA,WAAAN,IAAA,YAAAA,IAAA,WAAA,CACF,EAAA,CAAAA,CAAA,CAAA,EAGFQ,EAAAA,UAAA,IAAA,CACE,MAAAC,EAAAH,EAAA,QACA,GAAAG,EAAA,CACEA,EAAA,UAAA,OAAA,MAAAR,GAAA,CAAA,EAEA,MAAAS,EAAAD,EAAA,SAEA,UAAAE,KAAAD,EACEC,EAAA,UAAA,OAAA,MAAA,EACAA,EAAA,UAAA,OAAA,MAAA,EAGF,QAAAC,EAAA,EAAAA,EAAA,KAAA,KAAAX,EAAA,CAAA,GACE,EAAAW,GAAAF,EAAA,QADFE,IAGEX,EAAA,IAAA,GAAA,KAAA,KAAAA,EAAA,CAAA,IAAAW,EAAA,EACEF,EAAAE,CAAA,EAAA,UAAA,IAAA,MAAA,EAEAF,EAAAE,CAAA,EAAA,UAAA,IAAA,MAAA,CAEJ,CACF,EAAA,CAAAX,CAAA,CAAA,EAGFO,EAAAA,UAAA,IAAA,CACEN,GACEW,EAAAP,EAAA,QAAAJ,CAAA,EAEFC,GACEW,EAAAR,EAAA,QAAAH,CAAA,EAEFC,GAAA,MAAAA,GAAe,EAAA,CAAAF,EAAAC,CAAA,CAAA,EAGjBY,EAAAC,EAAA,CAAA,SAAAD,EAAA,MAAA,CAAA,IAAAT,EAAA,UAAA,UAAA,MAAAD,EAAA,SAAA,MAAA,KAAA,CAAA,OAAA,EAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAAAY,EAAAC,IAAAH,EAI6B,MAAC,CAAA,UAAA,MAEV,EAAA,QAAAG,CAAA,EADQ,CAAA,CAAA,CAAA,CAAA,CAAA,CAM9B;;;;;;;"}