{"version":3,"file":"Input-38b084ae.js","sources":["../../src/react/Input.tsx"],"sourcesContent":["import React, { CSSProperties, useEffect, useRef, useState } from 'react'\nimport { isMobile } from 'prismarine-viewer/viewer/lib/simpleUtils'\nimport styles from './input.module.css'\n\ninterface Props extends Omit<React.ComponentProps<'input'>, 'width'> {\n  rootStyles?: React.CSSProperties\n  autoFocus?: boolean\n  inputRef?: React.RefObject<HTMLInputElement>\n  validateInput?: (value: string) => CSSProperties | undefined\n  width?: number\n}\n\nexport default ({ autoFocus, rootStyles, inputRef, validateInput, defaultValue, width, ...inputProps }: Props) => {\n  if (width) rootStyles = { ...rootStyles, width }\n\n  const ref = useRef<HTMLInputElement>(null!)\n  const [validationStyle, setValidationStyle] = useState<CSSProperties>({})\n  const [value, setValue] = useState(defaultValue ?? '')\n\n  useEffect(() => {\n    setValue(inputProps.value === '' || inputProps.value ? inputProps.value : value)\n  }, [inputProps.value])\n\n  useEffect(() => {\n    if (inputRef) (inputRef as any).current = ref.current\n    if (!autoFocus || isMobile()) return // Don't make screen keyboard popup on mobile\n    ref.current.focus()\n  }, [])\n\n\n  return <div id='input-container' className={styles.container} style={rootStyles}>\n    <input\n      ref={ref}\n      className={styles.input}\n      autoComplete='off'\n      autoCapitalize='off'\n      autoCorrect='off'\n      autoSave='off'\n      spellCheck='false'\n      style={{ ...validationStyle }}\n      {...inputProps}\n      value={value}\n      onChange={(e) => {\n        setValidationStyle(validateInput?.(e.target.value) ?? {})\n        setValue(e.target.value)\n        inputProps.onChange?.(e)\n      }}\n    />\n  </div>\n}\n"],"names":["Input$1","autoFocus","rootStyles","inputRef","validateInput","defaultValue","width","inputProps","ref","useRef","validationStyle","setValidationStyle","useState","value","setValue","useEffect","isMobile","jsx","styles","e","_a"],"mappings":"6MAYAA,EAAA,CAAA,CAAA,UAAAC,EAAA,WAAAC,EAAA,SAAAC,EAAA,cAAAC,EAAA,aAAAC,EAAA,MAAAC,EAAA,GAAAC,KAAA,CACED,IAAWJ,EAAA,CAAA,GAAAA,EAAA,MAAAI,IAEX,MAAAE,EAAAC,SAAA,IAAA,EACA,CAAAC,EAAAC,CAAA,EAAAC,EAAA,SAAA,CAAA,CAAA,EACA,CAAAC,EAAAC,CAAA,EAAAF,EAAAA,SAAAP,GAAA,EAAA,EAEAU,OAAAA,EAAAA,UAAA,IAAA,CACED,EAAAP,EAAA,QAAA,IAAAA,EAAA,MAAAA,EAAA,MAAAM,CAAA,CAA+E,EAAA,CAAAN,EAAA,KAAA,CAAA,EAGjFQ,EAAAA,UAAA,IAAA,CACEZ,IAAcA,EAAA,QAAAK,EAAA,SACd,GAAAP,GAAAe,EAAA,IACAR,EAAA,QAAA,OAAkB,EAAA,CAAA,CAAA,EAIpBS,EAAA,MAAA,CAAA,GAAA,kBAAA,UAAAC,EAAA,UAAA,MAAAhB,EAAA,SAAAe,EACE,QAAC,CAAA,IAAAT,EACC,UAAAU,EAAA,MACkB,aAAA,MACL,eAAA,MACE,YAAA,MACH,SAAA,MACH,WAAA,QACE,MAAA,CAAA,GAAAR,CAAA,EACiB,GAAAH,EACxB,MAAAM,EACJ,SAAAM,GAAA,OAEER,GAAAP,GAAA,YAAAA,EAAAe,EAAA,OAAA,SAAA,CAAA,CAAA,EACAL,EAAAK,EAAA,OAAA,KAAA,GACAC,EAAAb,EAAA,WAAA,MAAAa,EAAA,KAAAb,EAAAY,EAAuB,CACzB,CAAA,CAAA,CAAA,CAGN"}