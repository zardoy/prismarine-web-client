{"version":3,"file":"BossBarOverlay.stories-48a6c5fd.js","sources":["../../src/react/BossBarOverlay.tsx"],"sourcesContent":["import type { BossBar as BossBarTypeRaw } from 'mineflayer'\nimport { useState, useEffect } from 'react'\nimport MessageFormattedString from './MessageFormattedString'\nimport './BossBarOverlay.css'\n\nconst colors = ['pink', 'blue', 'red', 'green', 'yellow', 'purple', 'white']\nconst divs = [0, 6, 10, 12, 20]\nconst translations = {\n  'entity.minecraft.ender_dragon': 'Ender Dragon',\n  'entity.minecraft.wither': 'Wither'\n}\n\nexport type BossBarType = BossBarTypeRaw & {\n  // todo why not use public properties?\n  title: { text: string, translate: string },\n  _title: { text: string, translate: string },\n  _color: string,\n  _dividers: number,\n  _health: number\n}\n\nexport default ({ bar }: { bar: BossBarType }) => {\n  const [title, setTitle] = useState('')\n  const [bossBarStyles, setBossBarStyles] = useState<{ [key: string]: string | number }>({})\n  const [fillStyles, setFillStyles] = useState<{ [key: string]: string | number }>({})\n  const [div1Styles, setDiv1Styles] = useState<{ [key: string]: string | number }>({})\n  const [div2Styles, setDiv2Styles] = useState<{ [key: string]: string | number }>({})\n\n  useEffect(() => {\n    setTitle(bar._title.text ? bar.title.text : translations[bar.title.translate] || 'Unknown Entity')\n    setBossBarStyles(prevStyles => ({\n      ...prevStyles,\n      backgroundPositionY: `-${colors.indexOf(bar._color) * 10}px`\n    }))\n    setFillStyles(prevStyles => ({\n      ...prevStyles,\n      width: `${bar._health * 100}%`,\n      backgroundPositionY: `-${colors.indexOf(bar._color) * 10 + 5}px`\n    }))\n    setDiv1Styles(prevStyles => ({\n      ...prevStyles,\n      backgroundPositionY: `-${divs.indexOf(bar._dividers) * 10 + 70}px`\n    }))\n    setDiv2Styles(prevStyles => ({\n      ...prevStyles,\n      width: `${bar._health * 100}%`,\n      backgroundPositionY: `-${divs.indexOf(bar._dividers) * 10 + 75}px`\n    }))\n  }, [bar])\n\n  return (\n    <div className=\"bossbar-container\">\n      <div className=\"bossbar-title\"><MessageFormattedString message={title} /></div>\n      <div className=\"bossbar\" style={bossBarStyles}>\n        <div className=\"fill\" style={fillStyles} />\n        <div className=\"fill\" style={div1Styles} />\n        <div className=\"fill\" style={div2Styles} />\n      </div>\n    </div>\n  )\n}\n"],"names":["colors","divs","translations","BossBarOverlay$1","bar","title","setTitle","useState","bossBarStyles","setBossBarStyles","fillStyles","setFillStyles","div1Styles","setDiv1Styles","div2Styles","setDiv2Styles","useEffect","prevStyles","jsxs","jsx","MessageFormattedString"],"mappings":"iYAKA,MAAAA,EAAA,CAAA,OAAA,OAAA,MAAA,QAAA,SAAA,SAAA,OAAA,EACAC,EAAA,CAAA,EAAA,EAAA,GAAA,GAAA,EAAA,EACAC,EAAA,CAAqB,gCAAA,eACc,0BAAA,QAEnC,EAWAC,EAAA,CAAA,CAAA,IAAAC,CAAA,IAAA,CACE,KAAA,CAAAC,EAAAC,CAAA,EAAAC,EAAA,SAAA,EAAA,EACA,CAAAC,EAAAC,CAAA,EAAAF,EAAA,SAAA,CAAA,CAAA,EACA,CAAAG,EAAAC,CAAA,EAAAJ,EAAA,SAAA,CAAA,CAAA,EACA,CAAAK,EAAAC,CAAA,EAAAN,EAAA,SAAA,CAAA,CAAA,EACA,CAAAO,EAAAC,CAAA,EAAAR,EAAA,SAAA,CAAA,CAAA,EAEAS,OAAAA,EAAAA,UAAA,IAAA,CACEV,EAAAF,EAAA,OAAA,KAAAA,EAAA,MAAA,KAAAF,EAAAE,EAAA,MAAA,SAAA,GAAA,gBAAA,EACAK,EAAAQ,IAAA,CAAgC,GAAAA,EAC3B,oBAAA,IAAAjB,EAAA,QAAAI,EAAA,MAAA,EAAA,EAAA,IACqD,EAAA,EAE1DO,EAAAM,IAAA,CAA6B,GAAAA,EACxB,MAAA,GAAAb,EAAA,QAAA,GAAA,IACwB,oBAAA,IAAAJ,EAAA,QAAAI,EAAA,MAAA,EAAA,GAAA,CAAA,IACiC,EAAA,EAE9DS,EAAAI,IAAA,CAA6B,GAAAA,EACxB,oBAAA,IAAAhB,EAAA,QAAAG,EAAA,SAAA,EAAA,GAAA,EAAA,IAC2D,EAAA,EAEhEW,EAAAE,IAAA,CAA6B,GAAAA,EACxB,MAAA,GAAAb,EAAA,QAAA,GAAA,IACwB,oBAAA,IAAAH,EAAA,QAAAG,EAAA,SAAA,EAAA,GAAA,EAAA,IACmC,EAAA,CAC9D,EAAA,CAAAA,CAAA,CAAA,EAGJc,EAAA,MAAA,CAAA,UAAA,oBAAA,SAAA,CAEIC,EAAA,MAAA,CAAA,UAAA,gBAAA,SAAAA,EAAAC,EAAA,CAAA,QAAAf,CAAA,CAAA,CAAA,CAAA,EAAyEa,EAAA,MAAA,CAAA,UAAA,UAAA,MAAAV,EAAA,SAAA,CAEvEW,EAAA,MAAA,CAAA,UAAA,OAAA,MAAAT,EAAA,EAAyCS,EAAA,MAAA,CAAA,UAAA,OAAA,MAAAP,EAAA,EACAO,EAAA,MAAA,CAAA,UAAA,OAAA,MAAAL,EAAA,CACA,EAAA,CAC3C,CAAA,CAAA,CAGN;;;;;;;;;;;;;;;;;;;;;;;;;;;"}