{"version":3,"file":"chatUtils-3faa5944.js","sources":["../../src/chatUtils.ts"],"sourcesContent":["// this should actually be moved to mineflayer / prismarine-viewer\n\nimport { fromFormattedString, TextComponent } from '@xmcl/text-component'\nimport type { IndexedData } from 'minecraft-data'\nimport { versionToNumber } from 'prismarine-viewer/viewer/prepare/utils'\n\nexport type MessageFormatPart = Pick<TextComponent, 'hoverEvent' | 'clickEvent'> & {\n  text: string\n  color?: string\n  bold?: boolean\n  italic?: boolean\n  underlined?: boolean\n  strikethrough?: boolean\n  obfuscated?: boolean\n}\n\ntype MessageInput = {\n  text?: string\n  translate?: string\n  with?: Array<MessageInput | string>\n  color?: string\n  bold?: boolean\n  italic?: boolean\n  underlined?: boolean\n  strikethrough?: boolean\n  obfuscated?: boolean\n  extra?: MessageInput[]\n  json?: any\n}\n\nconst global = globalThis as any\n\n// todo move to sign-renderer, replace with prismarine-chat, fix mcData issue!\nexport const formatMessage = (message: MessageInput, mcData: IndexedData = global.loadedData) => {\n  let msglist: MessageFormatPart[] = []\n\n  const readMsg = (msg: MessageInput) => {\n    const styles = {\n      color: msg.color,\n      bold: !!msg.bold,\n      italic: !!msg.italic,\n      underlined: !!msg.underlined,\n      strikethrough: !!msg.strikethrough,\n      obfuscated: !!msg.obfuscated\n    }\n\n    if (msg.text) {\n      msglist.push({\n        ...msg,\n        text: msg.text,\n        ...styles\n      })\n    } else if (msg.translate) {\n      const tText = mcData?.language[msg.translate] ?? msg.translate\n\n      if (msg.with) {\n        const splitted = tText.split(/%s|%\\d+\\$s/g)\n\n        let i = 0\n        for (const [j, part] of splitted.entries()) {\n          msglist.push({ text: part, ...styles })\n\n          if (j + 1 < splitted.length) {\n            if (msg.with[i]) {\n              const msgWith = msg.with[i]\n              if (typeof msgWith === 'string') {\n                readMsg({\n                  ...styles,\n                  text: msgWith\n                })\n              } else {\n                readMsg({\n                  ...styles,\n                  ...msgWith\n                })\n              }\n            }\n            i++\n          }\n        }\n      } else {\n        msglist.push({\n          ...msg,\n          text: tText,\n          ...styles\n        })\n      }\n    }\n\n    if (msg.extra) {\n      for (const ex of msg.extra) {\n        readMsg({ ...styles, ...ex })\n      }\n    }\n  }\n\n  readMsg(message)\n\n  const flat = (msg) => {\n    return [msg, msg.extra?.flatMap(flat) ?? []]\n  }\n\n  msglist = msglist.map(msg => {\n    // normalize ยง\n    if (!msg.text.includes?.('ยง')) return msg\n    const newMsg = fromFormattedString(msg.text)\n    return flat(newMsg)\n  }).flat(Infinity)\n\n  return msglist\n}\n\nconst blockToItemRemaps = {\n  water: 'water_bucket',\n  lava: 'lava_bucket',\n  redstone_wire: 'redstone',\n  tripwire: 'tripwire_hook'\n}\n\nexport const getItemFromBlock = (block: import('prismarine-block').Block) => {\n  const item = global.loadedData.itemsByName[blockToItemRemaps[block.name] ?? block.name]\n  return item\n}\n"],"names":["global","formatMessage","message","mcData","msglist","readMsg","msg","styles","tText","splitted","i","j","part","msgWith","ex","flat","_a","_b","newMsg","fromFormattedString"],"mappings":"mDA8BA,MAAMA,EAAS,WAGFC,EAAgB,CAACC,EAAuBC,EAAsBH,EAAO,aAAe,CAC/F,IAAII,EAA+B,CAAA,EAE7B,MAAAC,EAAWC,GAAsB,CACrC,MAAMC,EAAS,CACb,MAAOD,EAAI,MACX,KAAM,CAAC,CAACA,EAAI,KACZ,OAAQ,CAAC,CAACA,EAAI,OACd,WAAY,CAAC,CAACA,EAAI,WAClB,cAAe,CAAC,CAACA,EAAI,cACrB,WAAY,CAAC,CAACA,EAAI,UAAA,EAGpB,GAAIA,EAAI,KACNF,EAAQ,KAAK,CACX,GAAGE,EACH,KAAMA,EAAI,KACV,GAAGC,CAAA,CACJ,UACQD,EAAI,UAAW,CACxB,MAAME,GAAQL,GAAA,YAAAA,EAAQ,SAASG,EAAI,aAAcA,EAAI,UAErD,GAAIA,EAAI,KAAM,CACN,MAAAG,EAAWD,EAAM,MAAM,aAAa,EAE1C,IAAIE,EAAI,EACR,SAAW,CAACC,EAAGC,CAAI,IAAKH,EAAS,UAG3B,GAFJL,EAAQ,KAAK,CAAE,KAAMQ,EAAM,GAAGL,EAAQ,EAElCI,EAAI,EAAIF,EAAS,OAAQ,CACvB,GAAAH,EAAI,KAAKI,CAAC,EAAG,CACT,MAAAG,EAAUP,EAAI,KAAKI,CAAC,EAEhBL,EADN,OAAOQ,GAAY,SACb,CACN,GAAGN,EACH,KAAMM,CAAA,EAGA,CACN,GAAGN,EACH,GAAGM,CAAA,CAJJ,CAOL,CACAH,GACF,CACF,MAEAN,EAAQ,KAAK,CACX,GAAGE,EACH,KAAME,EACN,GAAGD,CAAA,CACJ,CAEL,CAEA,GAAID,EAAI,MACK,UAAAQ,KAAMR,EAAI,MACnBD,EAAQ,CAAE,GAAGE,EAAQ,GAAGO,CAAI,CAAA,CAEhC,EAGFT,EAAQH,CAAO,EAET,MAAAa,EAAQT,GAAQ,OACb,MAAA,CAACA,IAAKU,EAAAV,EAAI,QAAJ,YAAAU,EAAW,QAAQD,KAAS,CAAA,CAAE,CAAA,EAGnC,OAAAX,EAAAA,EAAQ,IAAWE,GAAA,SAE3B,GAAI,GAACW,GAAAD,EAAAV,EAAI,MAAK,WAAT,MAAAW,EAAA,KAAAD,EAAoB,MAAa,OAAAV,EAChC,MAAAY,EAASC,EAAoBb,EAAI,IAAI,EAC3C,OAAOS,EAAKG,CAAM,CAAA,CACnB,EAAE,KAAK,GAAQ,EAETd,CACT"}