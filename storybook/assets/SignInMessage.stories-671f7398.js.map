{"version":3,"file":"SignInMessage.stories-671f7398.js","sources":["../../node_modules/.pnpm/@zardoy+react-util@0.2.4_react-dom@18.2.0_react@18.2.0__react@18.2.0/node_modules/@zardoy/react-util/build/useUtilsEffect.js","../../node_modules/.pnpm/qrcode.react@3.1.0_react@18.2.0/node_modules/qrcode.react/lib/esm/index.js","../../src/react/SignInMessage.tsx"],"sourcesContent":["import { useEffect } from 'react';\nexport default (fn, deps) => {\n    useEffect(() => {\n        const controller = new AbortController();\n        const timeouts = new Set();\n        const intervals = new Set();\n        const unsubscribes = new Set();\n        fn({\n            signal: controller.signal,\n            async(callback) {\n                callback();\n            },\n            timeout(ms, callback) {\n                const id = setTimeout(callback, ms);\n                timeouts.add(id);\n                return id;\n            },\n            interval(ms, callback) {\n                const id = setInterval(callback, ms);\n                intervals.add(id);\n                return id;\n            },\n            on(target, event, callback, options) {\n                let unsubscribe;\n                if ('on' in target) {\n                    target.on(event, callback, options);\n                    unsubscribe = () => target.off(event, callback);\n                }\n                else if ('addEventListener' in target) {\n                    target.addEventListener(event, callback, options);\n                    unsubscribe = () => target.removeEventListener(event, callback, options);\n                }\n                else if ('addListener' in target) {\n                    target.addListener(event, callback, options);\n                    unsubscribe = () => target.removeListener(event, callback);\n                }\n                else {\n                    throw new Error('Invalid target, must have on/off or addEventListener/removeEventListener or addListener/removeListener');\n                }\n                unsubscribes.add(unsubscribe);\n                return unsubscribe;\n            }\n        });\n        return () => {\n            controller.abort();\n            timeouts.forEach(clearTimeout);\n            intervals.forEach(clearInterval);\n            unsubscribes.forEach(unsubscribe => unsubscribe());\n        };\n    }, deps);\n};\n","var __defProp = Object.defineProperty;\nvar __getOwnPropSymbols = Object.getOwnPropertySymbols;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __propIsEnum = Object.prototype.propertyIsEnumerable;\nvar __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;\nvar __spreadValues = (a, b) => {\n  for (var prop in b || (b = {}))\n    if (__hasOwnProp.call(b, prop))\n      __defNormalProp(a, prop, b[prop]);\n  if (__getOwnPropSymbols)\n    for (var prop of __getOwnPropSymbols(b)) {\n      if (__propIsEnum.call(b, prop))\n        __defNormalProp(a, prop, b[prop]);\n    }\n  return a;\n};\nvar __objRest = (source, exclude) => {\n  var target = {};\n  for (var prop in source)\n    if (__hasOwnProp.call(source, prop) && exclude.indexOf(prop) < 0)\n      target[prop] = source[prop];\n  if (source != null && __getOwnPropSymbols)\n    for (var prop of __getOwnPropSymbols(source)) {\n      if (exclude.indexOf(prop) < 0 && __propIsEnum.call(source, prop))\n        target[prop] = source[prop];\n    }\n  return target;\n};\n\n// src/index.tsx\nimport React, { useRef, useEffect, useState } from \"react\";\n\n// src/third-party/qrcodegen/index.ts\n/**\n * @license QR Code generator library (TypeScript)\n * Copyright (c) Project Nayuki.\n * SPDX-License-Identifier: MIT\n */\nvar qrcodegen;\n((qrcodegen2) => {\n  const _QrCode = class {\n    constructor(version, errorCorrectionLevel, dataCodewords, msk) {\n      this.version = version;\n      this.errorCorrectionLevel = errorCorrectionLevel;\n      this.modules = [];\n      this.isFunction = [];\n      if (version < _QrCode.MIN_VERSION || version > _QrCode.MAX_VERSION)\n        throw new RangeError(\"Version value out of range\");\n      if (msk < -1 || msk > 7)\n        throw new RangeError(\"Mask value out of range\");\n      this.size = version * 4 + 17;\n      let row = [];\n      for (let i = 0; i < this.size; i++)\n        row.push(false);\n      for (let i = 0; i < this.size; i++) {\n        this.modules.push(row.slice());\n        this.isFunction.push(row.slice());\n      }\n      this.drawFunctionPatterns();\n      const allCodewords = this.addEccAndInterleave(dataCodewords);\n      this.drawCodewords(allCodewords);\n      if (msk == -1) {\n        let minPenalty = 1e9;\n        for (let i = 0; i < 8; i++) {\n          this.applyMask(i);\n          this.drawFormatBits(i);\n          const penalty = this.getPenaltyScore();\n          if (penalty < minPenalty) {\n            msk = i;\n            minPenalty = penalty;\n          }\n          this.applyMask(i);\n        }\n      }\n      assert(0 <= msk && msk <= 7);\n      this.mask = msk;\n      this.applyMask(msk);\n      this.drawFormatBits(msk);\n      this.isFunction = [];\n    }\n    static encodeText(text, ecl) {\n      const segs = qrcodegen2.QrSegment.makeSegments(text);\n      return _QrCode.encodeSegments(segs, ecl);\n    }\n    static encodeBinary(data, ecl) {\n      const seg = qrcodegen2.QrSegment.makeBytes(data);\n      return _QrCode.encodeSegments([seg], ecl);\n    }\n    static encodeSegments(segs, ecl, minVersion = 1, maxVersion = 40, mask = -1, boostEcl = true) {\n      if (!(_QrCode.MIN_VERSION <= minVersion && minVersion <= maxVersion && maxVersion <= _QrCode.MAX_VERSION) || mask < -1 || mask > 7)\n        throw new RangeError(\"Invalid value\");\n      let version;\n      let dataUsedBits;\n      for (version = minVersion; ; version++) {\n        const dataCapacityBits2 = _QrCode.getNumDataCodewords(version, ecl) * 8;\n        const usedBits = QrSegment.getTotalBits(segs, version);\n        if (usedBits <= dataCapacityBits2) {\n          dataUsedBits = usedBits;\n          break;\n        }\n        if (version >= maxVersion)\n          throw new RangeError(\"Data too long\");\n      }\n      for (const newEcl of [_QrCode.Ecc.MEDIUM, _QrCode.Ecc.QUARTILE, _QrCode.Ecc.HIGH]) {\n        if (boostEcl && dataUsedBits <= _QrCode.getNumDataCodewords(version, newEcl) * 8)\n          ecl = newEcl;\n      }\n      let bb = [];\n      for (const seg of segs) {\n        appendBits(seg.mode.modeBits, 4, bb);\n        appendBits(seg.numChars, seg.mode.numCharCountBits(version), bb);\n        for (const b of seg.getData())\n          bb.push(b);\n      }\n      assert(bb.length == dataUsedBits);\n      const dataCapacityBits = _QrCode.getNumDataCodewords(version, ecl) * 8;\n      assert(bb.length <= dataCapacityBits);\n      appendBits(0, Math.min(4, dataCapacityBits - bb.length), bb);\n      appendBits(0, (8 - bb.length % 8) % 8, bb);\n      assert(bb.length % 8 == 0);\n      for (let padByte = 236; bb.length < dataCapacityBits; padByte ^= 236 ^ 17)\n        appendBits(padByte, 8, bb);\n      let dataCodewords = [];\n      while (dataCodewords.length * 8 < bb.length)\n        dataCodewords.push(0);\n      bb.forEach((b, i) => dataCodewords[i >>> 3] |= b << 7 - (i & 7));\n      return new _QrCode(version, ecl, dataCodewords, mask);\n    }\n    getModule(x, y) {\n      return 0 <= x && x < this.size && 0 <= y && y < this.size && this.modules[y][x];\n    }\n    getModules() {\n      return this.modules;\n    }\n    drawFunctionPatterns() {\n      for (let i = 0; i < this.size; i++) {\n        this.setFunctionModule(6, i, i % 2 == 0);\n        this.setFunctionModule(i, 6, i % 2 == 0);\n      }\n      this.drawFinderPattern(3, 3);\n      this.drawFinderPattern(this.size - 4, 3);\n      this.drawFinderPattern(3, this.size - 4);\n      const alignPatPos = this.getAlignmentPatternPositions();\n      const numAlign = alignPatPos.length;\n      for (let i = 0; i < numAlign; i++) {\n        for (let j = 0; j < numAlign; j++) {\n          if (!(i == 0 && j == 0 || i == 0 && j == numAlign - 1 || i == numAlign - 1 && j == 0))\n            this.drawAlignmentPattern(alignPatPos[i], alignPatPos[j]);\n        }\n      }\n      this.drawFormatBits(0);\n      this.drawVersion();\n    }\n    drawFormatBits(mask) {\n      const data = this.errorCorrectionLevel.formatBits << 3 | mask;\n      let rem = data;\n      for (let i = 0; i < 10; i++)\n        rem = rem << 1 ^ (rem >>> 9) * 1335;\n      const bits = (data << 10 | rem) ^ 21522;\n      assert(bits >>> 15 == 0);\n      for (let i = 0; i <= 5; i++)\n        this.setFunctionModule(8, i, getBit(bits, i));\n      this.setFunctionModule(8, 7, getBit(bits, 6));\n      this.setFunctionModule(8, 8, getBit(bits, 7));\n      this.setFunctionModule(7, 8, getBit(bits, 8));\n      for (let i = 9; i < 15; i++)\n        this.setFunctionModule(14 - i, 8, getBit(bits, i));\n      for (let i = 0; i < 8; i++)\n        this.setFunctionModule(this.size - 1 - i, 8, getBit(bits, i));\n      for (let i = 8; i < 15; i++)\n        this.setFunctionModule(8, this.size - 15 + i, getBit(bits, i));\n      this.setFunctionModule(8, this.size - 8, true);\n    }\n    drawVersion() {\n      if (this.version < 7)\n        return;\n      let rem = this.version;\n      for (let i = 0; i < 12; i++)\n        rem = rem << 1 ^ (rem >>> 11) * 7973;\n      const bits = this.version << 12 | rem;\n      assert(bits >>> 18 == 0);\n      for (let i = 0; i < 18; i++) {\n        const color = getBit(bits, i);\n        const a = this.size - 11 + i % 3;\n        const b = Math.floor(i / 3);\n        this.setFunctionModule(a, b, color);\n        this.setFunctionModule(b, a, color);\n      }\n    }\n    drawFinderPattern(x, y) {\n      for (let dy = -4; dy <= 4; dy++) {\n        for (let dx = -4; dx <= 4; dx++) {\n          const dist = Math.max(Math.abs(dx), Math.abs(dy));\n          const xx = x + dx;\n          const yy = y + dy;\n          if (0 <= xx && xx < this.size && 0 <= yy && yy < this.size)\n            this.setFunctionModule(xx, yy, dist != 2 && dist != 4);\n        }\n      }\n    }\n    drawAlignmentPattern(x, y) {\n      for (let dy = -2; dy <= 2; dy++) {\n        for (let dx = -2; dx <= 2; dx++)\n          this.setFunctionModule(x + dx, y + dy, Math.max(Math.abs(dx), Math.abs(dy)) != 1);\n      }\n    }\n    setFunctionModule(x, y, isDark) {\n      this.modules[y][x] = isDark;\n      this.isFunction[y][x] = true;\n    }\n    addEccAndInterleave(data) {\n      const ver = this.version;\n      const ecl = this.errorCorrectionLevel;\n      if (data.length != _QrCode.getNumDataCodewords(ver, ecl))\n        throw new RangeError(\"Invalid argument\");\n      const numBlocks = _QrCode.NUM_ERROR_CORRECTION_BLOCKS[ecl.ordinal][ver];\n      const blockEccLen = _QrCode.ECC_CODEWORDS_PER_BLOCK[ecl.ordinal][ver];\n      const rawCodewords = Math.floor(_QrCode.getNumRawDataModules(ver) / 8);\n      const numShortBlocks = numBlocks - rawCodewords % numBlocks;\n      const shortBlockLen = Math.floor(rawCodewords / numBlocks);\n      let blocks = [];\n      const rsDiv = _QrCode.reedSolomonComputeDivisor(blockEccLen);\n      for (let i = 0, k = 0; i < numBlocks; i++) {\n        let dat = data.slice(k, k + shortBlockLen - blockEccLen + (i < numShortBlocks ? 0 : 1));\n        k += dat.length;\n        const ecc = _QrCode.reedSolomonComputeRemainder(dat, rsDiv);\n        if (i < numShortBlocks)\n          dat.push(0);\n        blocks.push(dat.concat(ecc));\n      }\n      let result = [];\n      for (let i = 0; i < blocks[0].length; i++) {\n        blocks.forEach((block, j) => {\n          if (i != shortBlockLen - blockEccLen || j >= numShortBlocks)\n            result.push(block[i]);\n        });\n      }\n      assert(result.length == rawCodewords);\n      return result;\n    }\n    drawCodewords(data) {\n      if (data.length != Math.floor(_QrCode.getNumRawDataModules(this.version) / 8))\n        throw new RangeError(\"Invalid argument\");\n      let i = 0;\n      for (let right = this.size - 1; right >= 1; right -= 2) {\n        if (right == 6)\n          right = 5;\n        for (let vert = 0; vert < this.size; vert++) {\n          for (let j = 0; j < 2; j++) {\n            const x = right - j;\n            const upward = (right + 1 & 2) == 0;\n            const y = upward ? this.size - 1 - vert : vert;\n            if (!this.isFunction[y][x] && i < data.length * 8) {\n              this.modules[y][x] = getBit(data[i >>> 3], 7 - (i & 7));\n              i++;\n            }\n          }\n        }\n      }\n      assert(i == data.length * 8);\n    }\n    applyMask(mask) {\n      if (mask < 0 || mask > 7)\n        throw new RangeError(\"Mask value out of range\");\n      for (let y = 0; y < this.size; y++) {\n        for (let x = 0; x < this.size; x++) {\n          let invert;\n          switch (mask) {\n            case 0:\n              invert = (x + y) % 2 == 0;\n              break;\n            case 1:\n              invert = y % 2 == 0;\n              break;\n            case 2:\n              invert = x % 3 == 0;\n              break;\n            case 3:\n              invert = (x + y) % 3 == 0;\n              break;\n            case 4:\n              invert = (Math.floor(x / 3) + Math.floor(y / 2)) % 2 == 0;\n              break;\n            case 5:\n              invert = x * y % 2 + x * y % 3 == 0;\n              break;\n            case 6:\n              invert = (x * y % 2 + x * y % 3) % 2 == 0;\n              break;\n            case 7:\n              invert = ((x + y) % 2 + x * y % 3) % 2 == 0;\n              break;\n            default:\n              throw new Error(\"Unreachable\");\n          }\n          if (!this.isFunction[y][x] && invert)\n            this.modules[y][x] = !this.modules[y][x];\n        }\n      }\n    }\n    getPenaltyScore() {\n      let result = 0;\n      for (let y = 0; y < this.size; y++) {\n        let runColor = false;\n        let runX = 0;\n        let runHistory = [0, 0, 0, 0, 0, 0, 0];\n        for (let x = 0; x < this.size; x++) {\n          if (this.modules[y][x] == runColor) {\n            runX++;\n            if (runX == 5)\n              result += _QrCode.PENALTY_N1;\n            else if (runX > 5)\n              result++;\n          } else {\n            this.finderPenaltyAddHistory(runX, runHistory);\n            if (!runColor)\n              result += this.finderPenaltyCountPatterns(runHistory) * _QrCode.PENALTY_N3;\n            runColor = this.modules[y][x];\n            runX = 1;\n          }\n        }\n        result += this.finderPenaltyTerminateAndCount(runColor, runX, runHistory) * _QrCode.PENALTY_N3;\n      }\n      for (let x = 0; x < this.size; x++) {\n        let runColor = false;\n        let runY = 0;\n        let runHistory = [0, 0, 0, 0, 0, 0, 0];\n        for (let y = 0; y < this.size; y++) {\n          if (this.modules[y][x] == runColor) {\n            runY++;\n            if (runY == 5)\n              result += _QrCode.PENALTY_N1;\n            else if (runY > 5)\n              result++;\n          } else {\n            this.finderPenaltyAddHistory(runY, runHistory);\n            if (!runColor)\n              result += this.finderPenaltyCountPatterns(runHistory) * _QrCode.PENALTY_N3;\n            runColor = this.modules[y][x];\n            runY = 1;\n          }\n        }\n        result += this.finderPenaltyTerminateAndCount(runColor, runY, runHistory) * _QrCode.PENALTY_N3;\n      }\n      for (let y = 0; y < this.size - 1; y++) {\n        for (let x = 0; x < this.size - 1; x++) {\n          const color = this.modules[y][x];\n          if (color == this.modules[y][x + 1] && color == this.modules[y + 1][x] && color == this.modules[y + 1][x + 1])\n            result += _QrCode.PENALTY_N2;\n        }\n      }\n      let dark = 0;\n      for (const row of this.modules)\n        dark = row.reduce((sum, color) => sum + (color ? 1 : 0), dark);\n      const total = this.size * this.size;\n      const k = Math.ceil(Math.abs(dark * 20 - total * 10) / total) - 1;\n      assert(0 <= k && k <= 9);\n      result += k * _QrCode.PENALTY_N4;\n      assert(0 <= result && result <= 2568888);\n      return result;\n    }\n    getAlignmentPatternPositions() {\n      if (this.version == 1)\n        return [];\n      else {\n        const numAlign = Math.floor(this.version / 7) + 2;\n        const step = this.version == 32 ? 26 : Math.ceil((this.version * 4 + 4) / (numAlign * 2 - 2)) * 2;\n        let result = [6];\n        for (let pos = this.size - 7; result.length < numAlign; pos -= step)\n          result.splice(1, 0, pos);\n        return result;\n      }\n    }\n    static getNumRawDataModules(ver) {\n      if (ver < _QrCode.MIN_VERSION || ver > _QrCode.MAX_VERSION)\n        throw new RangeError(\"Version number out of range\");\n      let result = (16 * ver + 128) * ver + 64;\n      if (ver >= 2) {\n        const numAlign = Math.floor(ver / 7) + 2;\n        result -= (25 * numAlign - 10) * numAlign - 55;\n        if (ver >= 7)\n          result -= 36;\n      }\n      assert(208 <= result && result <= 29648);\n      return result;\n    }\n    static getNumDataCodewords(ver, ecl) {\n      return Math.floor(_QrCode.getNumRawDataModules(ver) / 8) - _QrCode.ECC_CODEWORDS_PER_BLOCK[ecl.ordinal][ver] * _QrCode.NUM_ERROR_CORRECTION_BLOCKS[ecl.ordinal][ver];\n    }\n    static reedSolomonComputeDivisor(degree) {\n      if (degree < 1 || degree > 255)\n        throw new RangeError(\"Degree out of range\");\n      let result = [];\n      for (let i = 0; i < degree - 1; i++)\n        result.push(0);\n      result.push(1);\n      let root = 1;\n      for (let i = 0; i < degree; i++) {\n        for (let j = 0; j < result.length; j++) {\n          result[j] = _QrCode.reedSolomonMultiply(result[j], root);\n          if (j + 1 < result.length)\n            result[j] ^= result[j + 1];\n        }\n        root = _QrCode.reedSolomonMultiply(root, 2);\n      }\n      return result;\n    }\n    static reedSolomonComputeRemainder(data, divisor) {\n      let result = divisor.map((_) => 0);\n      for (const b of data) {\n        const factor = b ^ result.shift();\n        result.push(0);\n        divisor.forEach((coef, i) => result[i] ^= _QrCode.reedSolomonMultiply(coef, factor));\n      }\n      return result;\n    }\n    static reedSolomonMultiply(x, y) {\n      if (x >>> 8 != 0 || y >>> 8 != 0)\n        throw new RangeError(\"Byte out of range\");\n      let z = 0;\n      for (let i = 7; i >= 0; i--) {\n        z = z << 1 ^ (z >>> 7) * 285;\n        z ^= (y >>> i & 1) * x;\n      }\n      assert(z >>> 8 == 0);\n      return z;\n    }\n    finderPenaltyCountPatterns(runHistory) {\n      const n = runHistory[1];\n      assert(n <= this.size * 3);\n      const core = n > 0 && runHistory[2] == n && runHistory[3] == n * 3 && runHistory[4] == n && runHistory[5] == n;\n      return (core && runHistory[0] >= n * 4 && runHistory[6] >= n ? 1 : 0) + (core && runHistory[6] >= n * 4 && runHistory[0] >= n ? 1 : 0);\n    }\n    finderPenaltyTerminateAndCount(currentRunColor, currentRunLength, runHistory) {\n      if (currentRunColor) {\n        this.finderPenaltyAddHistory(currentRunLength, runHistory);\n        currentRunLength = 0;\n      }\n      currentRunLength += this.size;\n      this.finderPenaltyAddHistory(currentRunLength, runHistory);\n      return this.finderPenaltyCountPatterns(runHistory);\n    }\n    finderPenaltyAddHistory(currentRunLength, runHistory) {\n      if (runHistory[0] == 0)\n        currentRunLength += this.size;\n      runHistory.pop();\n      runHistory.unshift(currentRunLength);\n    }\n  };\n  let QrCode = _QrCode;\n  QrCode.MIN_VERSION = 1;\n  QrCode.MAX_VERSION = 40;\n  QrCode.PENALTY_N1 = 3;\n  QrCode.PENALTY_N2 = 3;\n  QrCode.PENALTY_N3 = 40;\n  QrCode.PENALTY_N4 = 10;\n  QrCode.ECC_CODEWORDS_PER_BLOCK = [\n    [-1, 7, 10, 15, 20, 26, 18, 20, 24, 30, 18, 20, 24, 26, 30, 22, 24, 28, 30, 28, 28, 28, 28, 30, 30, 26, 28, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30],\n    [-1, 10, 16, 26, 18, 24, 16, 18, 22, 22, 26, 30, 22, 22, 24, 24, 28, 28, 26, 26, 26, 26, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28],\n    [-1, 13, 22, 18, 26, 18, 24, 18, 22, 20, 24, 28, 26, 24, 20, 30, 24, 28, 28, 26, 30, 28, 30, 30, 30, 30, 28, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30],\n    [-1, 17, 28, 22, 16, 22, 28, 26, 26, 24, 28, 24, 28, 22, 24, 24, 30, 28, 28, 26, 28, 30, 24, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30]\n  ];\n  QrCode.NUM_ERROR_CORRECTION_BLOCKS = [\n    [-1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 4, 4, 4, 4, 4, 6, 6, 6, 6, 7, 8, 8, 9, 9, 10, 12, 12, 12, 13, 14, 15, 16, 17, 18, 19, 19, 20, 21, 22, 24, 25],\n    [-1, 1, 1, 1, 2, 2, 4, 4, 4, 5, 5, 5, 8, 9, 9, 10, 10, 11, 13, 14, 16, 17, 17, 18, 20, 21, 23, 25, 26, 28, 29, 31, 33, 35, 37, 38, 40, 43, 45, 47, 49],\n    [-1, 1, 1, 2, 2, 4, 4, 6, 6, 8, 8, 8, 10, 12, 16, 12, 17, 16, 18, 21, 20, 23, 23, 25, 27, 29, 34, 34, 35, 38, 40, 43, 45, 48, 51, 53, 56, 59, 62, 65, 68],\n    [-1, 1, 1, 2, 4, 4, 4, 5, 6, 8, 8, 11, 11, 16, 16, 18, 16, 19, 21, 25, 25, 25, 34, 30, 32, 35, 37, 40, 42, 45, 48, 51, 54, 57, 60, 63, 66, 70, 74, 77, 81]\n  ];\n  qrcodegen2.QrCode = QrCode;\n  function appendBits(val, len, bb) {\n    if (len < 0 || len > 31 || val >>> len != 0)\n      throw new RangeError(\"Value out of range\");\n    for (let i = len - 1; i >= 0; i--)\n      bb.push(val >>> i & 1);\n  }\n  function getBit(x, i) {\n    return (x >>> i & 1) != 0;\n  }\n  function assert(cond) {\n    if (!cond)\n      throw new Error(\"Assertion error\");\n  }\n  const _QrSegment = class {\n    constructor(mode, numChars, bitData) {\n      this.mode = mode;\n      this.numChars = numChars;\n      this.bitData = bitData;\n      if (numChars < 0)\n        throw new RangeError(\"Invalid argument\");\n      this.bitData = bitData.slice();\n    }\n    static makeBytes(data) {\n      let bb = [];\n      for (const b of data)\n        appendBits(b, 8, bb);\n      return new _QrSegment(_QrSegment.Mode.BYTE, data.length, bb);\n    }\n    static makeNumeric(digits) {\n      if (!_QrSegment.isNumeric(digits))\n        throw new RangeError(\"String contains non-numeric characters\");\n      let bb = [];\n      for (let i = 0; i < digits.length; ) {\n        const n = Math.min(digits.length - i, 3);\n        appendBits(parseInt(digits.substr(i, n), 10), n * 3 + 1, bb);\n        i += n;\n      }\n      return new _QrSegment(_QrSegment.Mode.NUMERIC, digits.length, bb);\n    }\n    static makeAlphanumeric(text) {\n      if (!_QrSegment.isAlphanumeric(text))\n        throw new RangeError(\"String contains unencodable characters in alphanumeric mode\");\n      let bb = [];\n      let i;\n      for (i = 0; i + 2 <= text.length; i += 2) {\n        let temp = _QrSegment.ALPHANUMERIC_CHARSET.indexOf(text.charAt(i)) * 45;\n        temp += _QrSegment.ALPHANUMERIC_CHARSET.indexOf(text.charAt(i + 1));\n        appendBits(temp, 11, bb);\n      }\n      if (i < text.length)\n        appendBits(_QrSegment.ALPHANUMERIC_CHARSET.indexOf(text.charAt(i)), 6, bb);\n      return new _QrSegment(_QrSegment.Mode.ALPHANUMERIC, text.length, bb);\n    }\n    static makeSegments(text) {\n      if (text == \"\")\n        return [];\n      else if (_QrSegment.isNumeric(text))\n        return [_QrSegment.makeNumeric(text)];\n      else if (_QrSegment.isAlphanumeric(text))\n        return [_QrSegment.makeAlphanumeric(text)];\n      else\n        return [_QrSegment.makeBytes(_QrSegment.toUtf8ByteArray(text))];\n    }\n    static makeEci(assignVal) {\n      let bb = [];\n      if (assignVal < 0)\n        throw new RangeError(\"ECI assignment value out of range\");\n      else if (assignVal < 1 << 7)\n        appendBits(assignVal, 8, bb);\n      else if (assignVal < 1 << 14) {\n        appendBits(2, 2, bb);\n        appendBits(assignVal, 14, bb);\n      } else if (assignVal < 1e6) {\n        appendBits(6, 3, bb);\n        appendBits(assignVal, 21, bb);\n      } else\n        throw new RangeError(\"ECI assignment value out of range\");\n      return new _QrSegment(_QrSegment.Mode.ECI, 0, bb);\n    }\n    static isNumeric(text) {\n      return _QrSegment.NUMERIC_REGEX.test(text);\n    }\n    static isAlphanumeric(text) {\n      return _QrSegment.ALPHANUMERIC_REGEX.test(text);\n    }\n    getData() {\n      return this.bitData.slice();\n    }\n    static getTotalBits(segs, version) {\n      let result = 0;\n      for (const seg of segs) {\n        const ccbits = seg.mode.numCharCountBits(version);\n        if (seg.numChars >= 1 << ccbits)\n          return Infinity;\n        result += 4 + ccbits + seg.bitData.length;\n      }\n      return result;\n    }\n    static toUtf8ByteArray(str) {\n      str = encodeURI(str);\n      let result = [];\n      for (let i = 0; i < str.length; i++) {\n        if (str.charAt(i) != \"%\")\n          result.push(str.charCodeAt(i));\n        else {\n          result.push(parseInt(str.substr(i + 1, 2), 16));\n          i += 2;\n        }\n      }\n      return result;\n    }\n  };\n  let QrSegment = _QrSegment;\n  QrSegment.NUMERIC_REGEX = /^[0-9]*$/;\n  QrSegment.ALPHANUMERIC_REGEX = /^[A-Z0-9 $%*+.\\/:-]*$/;\n  QrSegment.ALPHANUMERIC_CHARSET = \"0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ $%*+-./:\";\n  qrcodegen2.QrSegment = QrSegment;\n})(qrcodegen || (qrcodegen = {}));\n((qrcodegen2) => {\n  let QrCode;\n  ((QrCode2) => {\n    const _Ecc = class {\n      constructor(ordinal, formatBits) {\n        this.ordinal = ordinal;\n        this.formatBits = formatBits;\n      }\n    };\n    let Ecc = _Ecc;\n    Ecc.LOW = new _Ecc(0, 1);\n    Ecc.MEDIUM = new _Ecc(1, 0);\n    Ecc.QUARTILE = new _Ecc(2, 3);\n    Ecc.HIGH = new _Ecc(3, 2);\n    QrCode2.Ecc = Ecc;\n  })(QrCode = qrcodegen2.QrCode || (qrcodegen2.QrCode = {}));\n})(qrcodegen || (qrcodegen = {}));\n((qrcodegen2) => {\n  let QrSegment;\n  ((QrSegment2) => {\n    const _Mode = class {\n      constructor(modeBits, numBitsCharCount) {\n        this.modeBits = modeBits;\n        this.numBitsCharCount = numBitsCharCount;\n      }\n      numCharCountBits(ver) {\n        return this.numBitsCharCount[Math.floor((ver + 7) / 17)];\n      }\n    };\n    let Mode = _Mode;\n    Mode.NUMERIC = new _Mode(1, [10, 12, 14]);\n    Mode.ALPHANUMERIC = new _Mode(2, [9, 11, 13]);\n    Mode.BYTE = new _Mode(4, [8, 16, 16]);\n    Mode.KANJI = new _Mode(8, [8, 10, 12]);\n    Mode.ECI = new _Mode(7, [0, 0, 0]);\n    QrSegment2.Mode = Mode;\n  })(QrSegment = qrcodegen2.QrSegment || (qrcodegen2.QrSegment = {}));\n})(qrcodegen || (qrcodegen = {}));\nvar qrcodegen_default = qrcodegen;\n\n// src/index.tsx\n/**\n * @license qrcode.react\n * Copyright (c) Paul O'Shannessy\n * SPDX-License-Identifier: ISC\n */\nvar ERROR_LEVEL_MAP = {\n  L: qrcodegen_default.QrCode.Ecc.LOW,\n  M: qrcodegen_default.QrCode.Ecc.MEDIUM,\n  Q: qrcodegen_default.QrCode.Ecc.QUARTILE,\n  H: qrcodegen_default.QrCode.Ecc.HIGH\n};\nvar DEFAULT_SIZE = 128;\nvar DEFAULT_LEVEL = \"L\";\nvar DEFAULT_BGCOLOR = \"#FFFFFF\";\nvar DEFAULT_FGCOLOR = \"#000000\";\nvar DEFAULT_INCLUDEMARGIN = false;\nvar MARGIN_SIZE = 4;\nvar DEFAULT_IMG_SCALE = 0.1;\nfunction generatePath(modules, margin = 0) {\n  const ops = [];\n  modules.forEach(function(row, y) {\n    let start = null;\n    row.forEach(function(cell, x) {\n      if (!cell && start !== null) {\n        ops.push(`M${start + margin} ${y + margin}h${x - start}v1H${start + margin}z`);\n        start = null;\n        return;\n      }\n      if (x === row.length - 1) {\n        if (!cell) {\n          return;\n        }\n        if (start === null) {\n          ops.push(`M${x + margin},${y + margin} h1v1H${x + margin}z`);\n        } else {\n          ops.push(`M${start + margin},${y + margin} h${x + 1 - start}v1H${start + margin}z`);\n        }\n        return;\n      }\n      if (cell && start === null) {\n        start = x;\n      }\n    });\n  });\n  return ops.join(\"\");\n}\nfunction excavateModules(modules, excavation) {\n  return modules.slice().map((row, y) => {\n    if (y < excavation.y || y >= excavation.y + excavation.h) {\n      return row;\n    }\n    return row.map((cell, x) => {\n      if (x < excavation.x || x >= excavation.x + excavation.w) {\n        return cell;\n      }\n      return false;\n    });\n  });\n}\nfunction getImageSettings(cells, size, includeMargin, imageSettings) {\n  if (imageSettings == null) {\n    return null;\n  }\n  const margin = includeMargin ? MARGIN_SIZE : 0;\n  const numCells = cells.length + margin * 2;\n  const defaultSize = Math.floor(size * DEFAULT_IMG_SCALE);\n  const scale = numCells / size;\n  const w = (imageSettings.width || defaultSize) * scale;\n  const h = (imageSettings.height || defaultSize) * scale;\n  const x = imageSettings.x == null ? cells.length / 2 - w / 2 : imageSettings.x * scale;\n  const y = imageSettings.y == null ? cells.length / 2 - h / 2 : imageSettings.y * scale;\n  let excavation = null;\n  if (imageSettings.excavate) {\n    let floorX = Math.floor(x);\n    let floorY = Math.floor(y);\n    let ceilW = Math.ceil(w + x - floorX);\n    let ceilH = Math.ceil(h + y - floorY);\n    excavation = { x: floorX, y: floorY, w: ceilW, h: ceilH };\n  }\n  return { x, y, h, w, excavation };\n}\nvar SUPPORTS_PATH2D = function() {\n  try {\n    new Path2D().addPath(new Path2D());\n  } catch (e) {\n    return false;\n  }\n  return true;\n}();\nfunction QRCodeCanvas(props) {\n  const _a = props, {\n    value,\n    size = DEFAULT_SIZE,\n    level = DEFAULT_LEVEL,\n    bgColor = DEFAULT_BGCOLOR,\n    fgColor = DEFAULT_FGCOLOR,\n    includeMargin = DEFAULT_INCLUDEMARGIN,\n    style,\n    imageSettings\n  } = _a, otherProps = __objRest(_a, [\n    \"value\",\n    \"size\",\n    \"level\",\n    \"bgColor\",\n    \"fgColor\",\n    \"includeMargin\",\n    \"style\",\n    \"imageSettings\"\n  ]);\n  const imgSrc = imageSettings == null ? void 0 : imageSettings.src;\n  const _canvas = useRef(null);\n  const _image = useRef(null);\n  const [isImgLoaded, setIsImageLoaded] = useState(false);\n  useEffect(() => {\n    if (_canvas.current != null) {\n      const canvas = _canvas.current;\n      const ctx = canvas.getContext(\"2d\");\n      if (!ctx) {\n        return;\n      }\n      let cells = qrcodegen_default.QrCode.encodeText(value, ERROR_LEVEL_MAP[level]).getModules();\n      const margin = includeMargin ? MARGIN_SIZE : 0;\n      const numCells = cells.length + margin * 2;\n      const calculatedImageSettings = getImageSettings(cells, size, includeMargin, imageSettings);\n      const image = _image.current;\n      const haveImageToRender = calculatedImageSettings != null && image !== null && image.complete && image.naturalHeight !== 0 && image.naturalWidth !== 0;\n      if (haveImageToRender) {\n        if (calculatedImageSettings.excavation != null) {\n          cells = excavateModules(cells, calculatedImageSettings.excavation);\n        }\n      }\n      const pixelRatio = window.devicePixelRatio || 1;\n      canvas.height = canvas.width = size * pixelRatio;\n      const scale = size / numCells * pixelRatio;\n      ctx.scale(scale, scale);\n      ctx.fillStyle = bgColor;\n      ctx.fillRect(0, 0, numCells, numCells);\n      ctx.fillStyle = fgColor;\n      if (SUPPORTS_PATH2D) {\n        ctx.fill(new Path2D(generatePath(cells, margin)));\n      } else {\n        cells.forEach(function(row, rdx) {\n          row.forEach(function(cell, cdx) {\n            if (cell) {\n              ctx.fillRect(cdx + margin, rdx + margin, 1, 1);\n            }\n          });\n        });\n      }\n      if (haveImageToRender) {\n        ctx.drawImage(image, calculatedImageSettings.x + margin, calculatedImageSettings.y + margin, calculatedImageSettings.w, calculatedImageSettings.h);\n      }\n    }\n  });\n  useEffect(() => {\n    setIsImageLoaded(false);\n  }, [imgSrc]);\n  const canvasStyle = __spreadValues({ height: size, width: size }, style);\n  let img = null;\n  if (imgSrc != null) {\n    img = /* @__PURE__ */ React.createElement(\"img\", {\n      src: imgSrc,\n      key: imgSrc,\n      style: { display: \"none\" },\n      onLoad: () => {\n        setIsImageLoaded(true);\n      },\n      ref: _image\n    });\n  }\n  return /* @__PURE__ */ React.createElement(React.Fragment, null, /* @__PURE__ */ React.createElement(\"canvas\", __spreadValues({\n    style: canvasStyle,\n    height: size,\n    width: size,\n    ref: _canvas\n  }, otherProps)), img);\n}\nfunction QRCodeSVG(props) {\n  const _a = props, {\n    value,\n    size = DEFAULT_SIZE,\n    level = DEFAULT_LEVEL,\n    bgColor = DEFAULT_BGCOLOR,\n    fgColor = DEFAULT_FGCOLOR,\n    includeMargin = DEFAULT_INCLUDEMARGIN,\n    imageSettings\n  } = _a, otherProps = __objRest(_a, [\n    \"value\",\n    \"size\",\n    \"level\",\n    \"bgColor\",\n    \"fgColor\",\n    \"includeMargin\",\n    \"imageSettings\"\n  ]);\n  let cells = qrcodegen_default.QrCode.encodeText(value, ERROR_LEVEL_MAP[level]).getModules();\n  const margin = includeMargin ? MARGIN_SIZE : 0;\n  const numCells = cells.length + margin * 2;\n  const calculatedImageSettings = getImageSettings(cells, size, includeMargin, imageSettings);\n  let image = null;\n  if (imageSettings != null && calculatedImageSettings != null) {\n    if (calculatedImageSettings.excavation != null) {\n      cells = excavateModules(cells, calculatedImageSettings.excavation);\n    }\n    image = /* @__PURE__ */ React.createElement(\"image\", {\n      xlinkHref: imageSettings.src,\n      height: calculatedImageSettings.h,\n      width: calculatedImageSettings.w,\n      x: calculatedImageSettings.x + margin,\n      y: calculatedImageSettings.y + margin,\n      preserveAspectRatio: \"none\"\n    });\n  }\n  const fgPath = generatePath(cells, margin);\n  return /* @__PURE__ */ React.createElement(\"svg\", __spreadValues({\n    height: size,\n    width: size,\n    viewBox: `0 0 ${numCells} ${numCells}`\n  }, otherProps), /* @__PURE__ */ React.createElement(\"path\", {\n    fill: bgColor,\n    d: `M0,0 h${numCells}v${numCells}H0z`,\n    shapeRendering: \"crispEdges\"\n  }), /* @__PURE__ */ React.createElement(\"path\", {\n    fill: fgColor,\n    d: fgPath,\n    shapeRendering: \"crispEdges\"\n  }), image);\n}\nvar QRCode = (props) => {\n  const _a = props, { renderAs } = _a, otherProps = __objRest(_a, [\"renderAs\"]);\n  if (renderAs === \"svg\") {\n    return /* @__PURE__ */ React.createElement(QRCodeSVG, __spreadValues({}, otherProps));\n  }\n  return /* @__PURE__ */ React.createElement(QRCodeCanvas, __spreadValues({}, otherProps));\n};\nexport {\n  QRCodeCanvas,\n  QRCodeSVG,\n  QRCode as default\n};\n","import { useState } from 'react'\nimport { useUtilsEffect } from '@zardoy/react-util'\nimport { QRCodeSVG } from 'qrcode.react'\nimport PixelartIcon, { pixelartIcons } from './PixelartIcon'\nimport Screen from './Screen'\nimport Button from './Button'\n\nexport default ({\n  code = 'ABCD-EFGH-IJKL-MNOP',\n  loginLink = 'https://aka.ms/devicelogin',\n  connectingServer = 'mc.example.comsdlfjsklfjsfjdskfjsj',\n  expiresEnd = Date.now() + 1000 * 60 * 5,\n  setSaveToken = (() => { }) as ((state: boolean) => void) | undefined,\n  defaultSaveToken = true,\n  onCancel = () => { },\n  directLink = 'https://aka.ms/devicelogin'\n}) => {\n  if (connectingServer.length > 30) connectingServer = connectingServer.slice(0, 30) + '...'\n  const [timeLeft, setTimeLeft] = useState(``)\n\n  useUtilsEffect(({ interval }) => {\n    interval(1000, () => {\n      const timeLeft = Math.max(0, Math.ceil((expiresEnd - Date.now()) / 1000))\n      const minutes = Math.floor(timeLeft / 60)\n      const seconds = timeLeft % 60\n      setTimeLeft(`${minutes}:${seconds.toString().padStart(2, '0')}`)\n      if (timeLeft <= 0) setTimeLeft('Code expired!')\n    })\n  }, [])\n\n  return <Screen title='Microsoft Account Authentication' titleMarginTop={5}>\n    <div style={{\n      background: 'white',\n      padding: '20px 18px',\n      width: 300,\n      maxHeight: 240,\n      color: 'black',\n      // borderRadius: 8,\n    }}\n    >\n      <div style={{\n        // fontFamily: 'monospace',\n        fontSize: 18,\n        padding: '5px 10px',\n        paddingBottom: 1,\n        backgroundColor: 'lightgray',\n        textAlign: 'center',\n        marginTop: -5,\n        userSelect: 'all',\n      }}\n      >{code}\n      </div>\n      <div style={{\n        display: 'flex',\n        justifyContent: 'center',\n        fontSize: 12,\n      }}\n      >\n        Waiting... <PixelartIcon iconName='clock' /> {timeLeft}\n      </div>\n      <div style={{\n        fontSize: 12,\n        marginTop: 10,\n      }}\n      >\n        To join a Minecraft server {connectingServer} using your Microsoft account, you need to visit{' '}\n        <a\n          href={directLink}\n          style={{\n            color: 'black',\n            textDecoration: 'underline',\n            fontWeight: 600,\n          }}\n          target='_blank'\n        >Direct Link\n        </a>\n        {' '} or {' '}\n        <a\n          href={loginLink}\n          style={{\n            color: 'black',\n            textDecoration: 'underline',\n            fontWeight: 600,\n          }}\n          target='_blank'\n        >{loginLink.replace(/(https?:\\/\\/)?(www\\.)?/, '')}\n        </a>\n        {' '}\n        and enter the code above.\n      </div>\n      <div style={{\n        fontSize: 11,\n        marginTop: 5,\n        color: 'gray',\n        display: 'flex',\n        gap: 2\n      }}\n      >\n        <div>\n          <PixelartIcon iconName={pixelartIcons.alert} styles={{ display: 'inline-block', }} />\n          Join only <b>vanilla servers</b>! This client is detectable and may result in a ban by anti-cheat plugins.\n        </div>\n        <QRCodeSVG size={40} value={directLink} style={{ display: 'block', flexShrink: 0 }} color='gray' />\n      </div>\n      {setSaveToken && <label style={{\n        fontSize: 12,\n        display: 'flex',\n        alignItems: 'center',\n        gap: 5,\n        marginTop: 4,\n      }}\n      >\n        <input type='checkbox' defaultChecked={defaultSaveToken} onChange={e => setSaveToken(e.target.checked)} />{' '}\n        Save account token in this browser\n      </label>}\n    </div>\n    <Button\n      style={{\n        marginTop: -5,\n      }}\n      onClick={onCancel}\n    >Cancel\n    </Button>\n  </Screen>\n}\n"],"names":["useUtilsEffect","fn","deps","useEffect","controller","timeouts","intervals","unsubscribes","callback","ms","id","target","event","options","unsubscribe","__defProp","__getOwnPropSymbols","__hasOwnProp","__propIsEnum","__defNormalProp","obj","key","value","__spreadValues","a","b","prop","__objRest","source","exclude","qrcodegen","qrcodegen2","_QrCode","version","errorCorrectionLevel","dataCodewords","msk","row","i","allCodewords","minPenalty","penalty","assert","text","ecl","segs","data","seg","minVersion","maxVersion","mask","boostEcl","dataUsedBits","dataCapacityBits2","usedBits","QrSegment","newEcl","bb","appendBits","dataCapacityBits","padByte","x","y","alignPatPos","numAlign","j","rem","bits","getBit","color","dy","dx","dist","xx","yy","isDark","ver","numBlocks","blockEccLen","rawCodewords","numShortBlocks","shortBlockLen","blocks","rsDiv","k","dat","ecc","result","block","right","vert","invert","runColor","runX","runHistory","runY","dark","sum","total","step","pos","degree","root","divisor","_","factor","coef","z","core","currentRunColor","currentRunLength","QrCode","val","len","cond","_QrSegment","mode","numChars","bitData","digits","n","temp","assignVal","ccbits","str","QrCode2","_Ecc","ordinal","formatBits","Ecc","QrSegment2","_Mode","modeBits","numBitsCharCount","Mode","qrcodegen_default","ERROR_LEVEL_MAP","DEFAULT_SIZE","DEFAULT_LEVEL","DEFAULT_BGCOLOR","DEFAULT_FGCOLOR","DEFAULT_INCLUDEMARGIN","MARGIN_SIZE","DEFAULT_IMG_SCALE","generatePath","modules","margin","ops","start","cell","excavateModules","excavation","getImageSettings","cells","size","includeMargin","imageSettings","numCells","defaultSize","scale","w","h","floorX","floorY","ceilW","ceilH","QRCodeSVG","props","_a","level","bgColor","fgColor","otherProps","calculatedImageSettings","image","React","fgPath","SignInMessage$1","code","loginLink","connectingServer","expiresEnd","setSaveToken","defaultSaveToken","onCancel","directLink","timeLeft","setTimeLeft","useState","interval","timeLeft2","minutes","seconds","jsxs","Screen","jsx","PixelartIcon","pixelartIcons","e","Button"],"mappings":"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","x_google_ignoreList":[0,1]}